{"version":3,"sources":["webparts/basicAngular/BasicAngularWebPart.ts"],"names":[],"mappings":"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","file":"webparts/basicAngular/BasicAngularWebPart.js","sourcesContent":["//import 'core-js/es6/object';\r\n//import 'typescript/lib/lib.es6.d.ts';\r\n//import 'es6-shim/es6-shim';\r\n\r\nimport { \r\n  Version,\r\n  Environment,\r\n  EnvironmentType  \r\n} from '@microsoft/sp-core-library';\r\nimport {\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport { \r\n  APP_INITIALIZER,\r\n  ModuleWithProviders \r\n} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport styles from './BasicAngular.module.scss';\r\nimport { BaseAngularWebPart } from './../../core/webparts/base-angular.webpart';\r\nimport { IBasicAngularWebPartProps } from './IBasicAngularWebPartProps';\r\nimport pnp from \"sp-pnp-js\";\r\n\r\nimport { ConfigurationService, ItemsService, MockItemsService } from \"./app/shared/services\";\r\nimport { AppRoutes } from './app';\r\nimport { HomeComponent } from './app/home';\r\nimport { ListComponent } from './app/list';\r\nimport { AngularAppComponent } from './app/AngularApp';\r\n\r\n//require('es6-shim');\r\n\r\n//var from = require('array.from');\r\n//delete Array.from;\r\n\r\nexport default class BasicAngularWebPart extends BaseAngularWebPart<IBasicAngularWebPartProps> {\r\n  \r\n  protected importDeclarationTypes: any = [];\r\n\r\n  protected get appDeclarationTypes(): any[] {\r\n    return [\r\n      HomeComponent,\r\n      ListComponent,\r\n      AngularAppComponent\r\n    ];\r\n  }\r\n  \r\n  protected get routes(): ModuleWithProviders {\r\n    return AppRoutes;\r\n  }\r\n\r\n  protected get providers(): any[] {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      return [\r\n        // Provides the Configuration Service\r\n        ConfigurationService,\r\n\r\n        // Provides the ItemsService with its Mocked instance\r\n        { provide: ItemsService, useClass: MockItemsService },\r\n\r\n        // Initialized the ConfigurationService data based on the ClientWebPart configuration\r\n        { provide: APP_INITIALIZER, useFactory: (configurationService: ConfigurationService) => () => configurationService.load({\r\n          mocked: true,\r\n          listName: this.properties.listName,\r\n          description: this.properties.description,\r\n          styles: styles\r\n        }), deps: [ConfigurationService], multi: true }\r\n      ];\r\n    } else if (Environment.type == EnvironmentType.SharePoint || Environment.type == EnvironmentType.ClassicSharePoint) {\r\n      return [\r\n        // Provides the Configuration Service\r\n        ConfigurationService,\r\n\r\n        // Provides the ItemsService with its Real instance\r\n        { provide: ItemsService, useClass: ItemsService },\r\n\r\n        // Initialized the ConfigurationService data based on the ClientWebPart configuration\r\n        { provide: APP_INITIALIZER, useFactory: (configurationService: ConfigurationService) => () => configurationService.load({\r\n          mocked: false,\r\n          listName: this.properties.listName,\r\n          description: this.properties.description,\r\n          styles: styles\r\n        }), deps: [ConfigurationService], multi: true }\r\n      ];\r\n    }    \r\n  }\r\n\r\n  public onInit(): Promise<void> {\r\n    return super.onInit().then(_ => {  \r\n      pnp.setup({\r\n        spfxContext: this.context\r\n      });      \r\n    });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: \"Angular Basic Webpart\"\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: \"General Configuration\",\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: \"Title\"\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: \"List Configuration\",\r\n              groupFields: [\r\n                PropertyPaneTextField('listName', {\r\n                  label: \"List Name\"\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}